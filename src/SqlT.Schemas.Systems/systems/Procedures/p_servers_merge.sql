CREATE PROCEDURE [systems].[p_servers_merge](@Records [systems].[servers_record] readonly) as
	merge into [systems].[servers] as Dst using @Records as Src
	on
		Dst.systems_server_name = Src.systems_server_name and Dst.server_id = Src.server_id
	when not matched then insert
	(
		[systems_server_name],
		[server_id],
		[name],
		[product],
		[provider],
		[data_source],
		[location],
		[provider_string],
		[catalog],
		[connect_timeout],
		[query_timeout],
		[is_linked],
		[is_remote_login_enabled],
		[is_rpc_out_enabled],
		[is_data_access_enabled],
		[is_collation_compatible],
		[uses_remote_collation],
		[collation_name],
		[lazy_schema_validation],
		[is_system],
		[is_publisher],
		[is_subscriber],
		[is_distributor],
		[is_nonsql_subscriber],
		[is_remote_proc_transaction_promotion_enabled],
		[modify_date]
	)
	values
	(
		Src.[systems_server_name],
		Src.[server_id],
		Src.[name],
		Src.[product],
		Src.[provider],
		Src.[data_source],
		Src.[location],
		Src.[provider_string],
		Src.[catalog],
		Src.[connect_timeout],
		Src.[query_timeout],
		Src.[is_linked],
		Src.[is_remote_login_enabled],
		Src.[is_rpc_out_enabled],
		Src.[is_data_access_enabled],
		Src.[is_collation_compatible],
		Src.[uses_remote_collation],
		Src.[collation_name],
		Src.[lazy_schema_validation],
		Src.[is_system],
		Src.[is_publisher],
		Src.[is_subscriber],
		Src.[is_distributor],
		Src.[is_nonsql_subscriber],
		Src.[is_remote_proc_transaction_promotion_enabled],
		Src.[modify_date]
	)
	when matched and not exists
	(
		select
			Src.[name],
			Src.[product],
			Src.[provider],
			Src.[data_source],
			Src.[location],
			Src.[provider_string],
			Src.[catalog],
			Src.[connect_timeout],
			Src.[query_timeout],
			Src.[is_linked],
			Src.[is_remote_login_enabled],
			Src.[is_rpc_out_enabled],
			Src.[is_data_access_enabled],
			Src.[is_collation_compatible],
			Src.[uses_remote_collation],
			Src.[collation_name],
			Src.[lazy_schema_validation],
			Src.[is_system],
			Src.[is_publisher],
			Src.[is_subscriber],
			Src.[is_distributor],
			Src.[is_nonsql_subscriber],
			Src.[is_remote_proc_transaction_promotion_enabled],
			Src.[modify_date]

		intersect 

		select
			Dst.[name],
			Dst.[product],
			Dst.[provider],
			Dst.[data_source],
			Dst.[location],
			Dst.[provider_string],
			Dst.[catalog],
			Dst.[connect_timeout],
			Dst.[query_timeout],
			Dst.[is_linked],
			Dst.[is_remote_login_enabled],
			Dst.[is_rpc_out_enabled],
			Dst.[is_data_access_enabled],
			Dst.[is_collation_compatible],
			Dst.[uses_remote_collation],
			Dst.[collation_name],
			Dst.[lazy_schema_validation],
			Dst.[is_system],
			Dst.[is_publisher],
			Dst.[is_subscriber],
			Dst.[is_distributor],
			Dst.[is_nonsql_subscriber],
			Dst.[is_remote_proc_transaction_promotion_enabled],
			Dst.[modify_date]
	)
	then update set
			Dst.[name] = Src.[name],
			Dst.[product] = Src.[product],
			Dst.[provider] = Src.[provider],
			Dst.[data_source] = Src.[data_source],
			Dst.[location] = Src.[location],
			Dst.[provider_string] = Src.[provider_string],
			Dst.[catalog] = Src.[catalog],
			Dst.[connect_timeout] = Src.[connect_timeout],
			Dst.[query_timeout] = Src.[query_timeout],
			Dst.[is_linked] = Src.[is_linked],
			Dst.[is_remote_login_enabled] = Src.[is_remote_login_enabled],
			Dst.[is_rpc_out_enabled] = Src.[is_rpc_out_enabled],
			Dst.[is_data_access_enabled] = Src.[is_data_access_enabled],
			Dst.[is_collation_compatible] = Src.[is_collation_compatible],
			Dst.[uses_remote_collation] = Src.[uses_remote_collation],
			Dst.[collation_name] = Src.[collation_name],
			Dst.[lazy_schema_validation] = Src.[lazy_schema_validation],
			Dst.[is_system] = Src.[is_system],
			Dst.[is_publisher] = Src.[is_publisher],
			Dst.[is_subscriber] = Src.[is_subscriber],
			Dst.[is_distributor] = Src.[is_distributor],
			Dst.[is_nonsql_subscriber] = Src.[is_nonsql_subscriber],
			Dst.[is_remote_proc_transaction_promotion_enabled] = Src.[is_remote_proc_transaction_promotion_enabled],
			Dst.[modify_date] = Src.[modify_date];


